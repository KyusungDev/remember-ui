{"version":3,"sources":["webpack:///../docsSrc/components/Container/Container.js","webpack:///../docsSrc/components/Button/MoreButton/MoreButton.js","webpack:///../docsSrc/components/Button/MoreButton/MoreButton.mdx","webpack:///../docsSrc/components/Button/BaseButton/BaseButton.js","webpack:///../src/components/Spinner/Spinner.styles.js","webpack:///../src/components/Spinner/index.js","webpack:///../src/components/Button/MoreButton/MoreButton.styles.js","webpack:///../src/components/Button/MoreButton/index.js","webpack:///../src/components/Button/BaseButton/Button.styles.js","webpack:///../src/components/Button/BaseButton/index.js"],"names":["Container","children","rest","direction","MoreButton","value","size","onClick","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","__position","__code","__scope","Playground","Props","BaseButton","React","isShow","setIsShow","color","fill","isMDXComponent","rounded","borderless","disabled","isLoading","className","width","styled","Spinner","height","borderWeight","Icon","alt","src","css","lessIcon","moreIcon","Inner","textSmall","weight","fillColor","BlackButton","large","YellowButton","LightYellowButton","GrayButton","BlueButton","RedButton","LiteButton","PlusButton","testId","ColorButton","getButton","e","data-testid"],"mappings":"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","file":"component---docs-src-components-button-more-button-more-button-mdx-4570fb3f620d186320e1.js","sourcesContent":["import React from 'react';\nimport t from 'prop-types';\nimport { Container as Component } from 'remember-ui';\n\nexport const Container = ({ children, ...rest }) => (\n  <Component {...rest}>{children}</Component>\n);\n\nContainer.propTypes = {\n  direction: t.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n};\n\nContainer.defaultProps = {\n  direction: 'row',\n};\n","import React from 'react';\nimport t from 'prop-types';\nimport { MoreButton as Component } from 'remember-ui';\n\nexport const MoreButton = ({ children, ...rest }) => {\n  return <Component {...rest}>{children}</Component>;\n};\n\nMoreButton.propTypes = {\n  value: t.oneOf([false, true]),\n  size: t.oneOf(['small', 'large']),\n  onClick: t.func,\n};\n\nMoreButton.defaultProps = {\n  value: false,\n  size: 'small',\n  onClick: () => {},\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jisukyoon/remember-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { MoreButton } from './MoreButton';\nimport { BaseButton } from '../BaseButton/BaseButton';\nimport { Container } from '../../Container/Container';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"morebutton\"\n    }}>{`MoreButton`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={MoreButton} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const [isShow, setIsShow] = React.useState(false)\\n  const toggle = () => setIsShow(!isShow)\\n  return (\\n    <>\\n      <Container direction=\\\"column\\\">\\n        <div>MoreButton Show/Hide</div>\\n        <Container direction=\\\"row\\\">\\n          <BaseButton color=\\\"black\\\">\\n            Show\\n            <MoreButton />\\n          </BaseButton>\\n          <BaseButton color=\\\"black\\\">\\n            Hide\\n            <MoreButton value />\\n          </BaseButton>\\n          <BaseButton fill>\\n            Show\\n            <MoreButton size=\\\"large\\\" />\\n          </BaseButton>\\n          <BaseButton fill>\\n            Hide\\n            <MoreButton value size=\\\"large\\\" />\\n          </BaseButton>\\n        </Container>\\n      </Container>\\n\\n      <Container direction=\\\"column\\\">\\n        <div>MoreButton onClick Event Bind</div>\\n        <Container direction=\\\"row\\\">\\n          <BaseButton fill onClick={toggle}>\\n            {isShow ? \\'Hide\\' : \\'Show\\'}\\n            <MoreButton size=\\\"large\\\" value={isShow} />\\n          </BaseButton>\\n        </Container>\\n      </Container>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      MoreButton,\n      BaseButton,\n      Container,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [isShow, setIsShow] = React.useState(false);\n\n        const toggle = () => setIsShow(!isShow);\n\n        return <>\n        <Container direction=\"column\" mdxType=\"Container\">\n          <div>MoreButton Show/Hide</div>\n          <Container direction=\"row\" mdxType=\"Container\">\n            <BaseButton color=\"black\" mdxType=\"BaseButton\">\n              Show\n              <MoreButton mdxType=\"MoreButton\" />\n            </BaseButton>\n            <BaseButton color=\"black\" mdxType=\"BaseButton\">\n              Hide\n              <MoreButton value mdxType=\"MoreButton\" />\n            </BaseButton>\n            <BaseButton fill mdxType=\"BaseButton\">\n              Show\n              <MoreButton size=\"large\" mdxType=\"MoreButton\" />\n            </BaseButton>\n            <BaseButton fill mdxType=\"BaseButton\">\n              Hide\n              <MoreButton value size=\"large\" mdxType=\"MoreButton\" />\n            </BaseButton>\n          </Container>\n        </Container>\n        \n        <Container direction=\"column\" mdxType=\"Container\">\n          <div>MoreButton onClick Event Bind</div>\n          <Container direction=\"row\" mdxType=\"Container\">\n            <BaseButton fill onClick={toggle} mdxType=\"BaseButton\">\n              {isShow ? 'Hide' : 'Show'}\n              <MoreButton size=\"large\" value={isShow} mdxType=\"MoreButton\" />\n            </BaseButton>\n          </Container>\n        </Container>\n      </>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\nimport t from 'prop-types';\nimport { BaseButton as Component } from 'remember-ui';\n\nexport const BaseButton = ({ children, ...rest }) => {\n  return <Component {...rest}>{children}</Component>;\n};\n\nBaseButton.propTypes = {\n  rounded: t.oneOf([false, true]),\n  fill: t.oneOf([false, true]),\n  borderless: t.oneOf([false, true]),\n  disabled: t.oneOf([false, true]),\n  isLoading: t.oneOf([false, true]),\n  color: t.oneOf([\n    'black',\n    'yellow',\n    'light-yellow',\n    'gray',\n    'blue',\n    'red',\n    'lite',\n    'plus',\n  ]),\n  size: t.oneOf(['small', 'medium', 'large', 'xlarge']),\n  className: t.string,\n  width: t.number,\n  onClick: t.func,\n};\n\nBaseButton.defaultProps = {\n  rounded: true,\n  fill: false,\n  borderless: false,\n  disabled: false,\n  isLoading: false,\n  color: 'yellow',\n  size: 'small',\n  className: '',\n  width: 72,\n  onClick: () => {},\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  height: ${({ height }) => height}px;\n  width: ${({ width }) => width}px;\n\n  border: 5px solid rgba(0, 0, 0, 0.1);\n  border-radius: 100%;\n  border: ${({ borderWeight }) => `${borderWeight}px solid rgba(0, 0, 0, 0.1)`};\n  border-top-color: transparent !important;\n\n  animation: spin 800ms infinite linear;\n  @keyframes spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(359deg);\n    }\n  }\n`;\n","import React from 'react';\n\nimport { Container } from './Spinner.styles';\n\nexport const Spinner = ({ width = 32, height = 32, borderWeight = 5 }) => (\n  <Container width={width} height={height} borderWeight={borderWeight} />\n);\n","import styled, { css } from 'styled-components';\n\nexport const Icon = styled.img.attrs({\n  width: 12,\n  height: 12,\n  alt: 'more',\n})`\n  ${({ src }) =>\n    src &&\n    css`\n      src: ${src};\n    `}\n\n  width: ${({ size }) => size === 'large' && '16px'};\n  height: ${({ size }) => size === 'large' && '16px'};\n  margin-top: ${({ size }) => size === 'large' && '2px'};\n    \n  display: inline-block;\n  cursor: pointer;\n\n  user-select: none; /* Non-prefixed version, currently supported by Chrome and Opera */\n`;\n","import React from 'react';\n\nimport {\n  expandMoreSmallIcon,\n  expandLessSmallIcon,\n  expandLessLargeIcon,\n  expandMoreLargeIcon,\n} from '../../../assets';\n\nimport { Icon } from './MoreButton.styles';\n\nexport const MoreButton = ({\n  value = false,\n  size = 'small',\n  onClick = () => {},\n}) => {\n  const lessIcon = size === 'small' ? expandLessSmallIcon : expandLessLargeIcon;\n  const moreIcon = size === 'small' ? expandMoreSmallIcon : expandMoreLargeIcon;\n  return (\n    <Icon size={size} onClick={onClick} src={value ? lessIcon : moreIcon} />\n  );\n};\n","import styled, { css } from 'styled-components';\n\nimport {\n  gray50,\n  gray100,\n  gray120,\n  gray200,\n  gray400,\n  gray450,\n  blue100,\n  red100,\n  yellow100,\n  gold100,\n  white,\n} from '../../../core/GlobalStyle';\nimport { flexCenter, textSmall } from '../../../core/GlobalStyle';\n\nexport const Inner = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 1px;\n`;\n\nexport const Container = styled.div`\n  ${flexCenter};\n  ${textSmall({ weight: 400 })};\n\n  border: 1px solid ${gray450};\n  box-sizing: border-box;\n  cursor: pointer;\n\n  ${({ width }) =>\n    width &&\n    css`\n      width: ${width}px;\n    `}\n\n  height:  ${({ size }) =>\n    (size === 'small' && '32px') ||\n    (size === 'medium' && '36px') ||\n    (size === 'large' && '48px') ||\n    (size === 'xlarge' && '52px')};\n\n  font-size: ${({ size }) =>\n    (size === 'small' && '13px') ||\n    (size === 'large' && '15px') ||\n    (size === 'xlarge' && '16px')};\n\n  font-weight: ${({ size }) => size === 'xlarge' && 'bold'};\n\n  ${({ rounded }) =>\n    rounded &&\n    css`\n      border-radius: 4px;\n\n      &.small {\n        border-radius: 2px;\n      }\n    `}\n\n  ${({ borderless }) =>\n    borderless &&\n    css`\n      border: none;\n    `}\n\n  ${({ disabled }) =>\n    disabled &&\n    css`\n      border-color: ${gray100} !important;\n      color: ${gray120} !important;\n\n      cursor: default;\n\n      &:hover {\n        background-color: ${white} !important;\n      }\n    `}\n\n  ${({ disabled, fillColor }) =>\n    disabled &&\n    fillColor &&\n    css`\n      color: ${white} !important;\n      border: 1px solid ${gray120} !important;\n      background-color: ${gray120} !important;\n\n      cursor: default;\n\n      &:hover {\n        background-color: ${gray120} !important;\n        opacity: 1 !important;\n      }\n    `}\n`;\n\nexport const BlackButton = styled(Container)`\n  border-color: ${gray100};\n  color: ${gray450};\n      \n  ${({ fillColor }) =>\n    fillColor &&\n    css`\n      color: ${white};\n      border-color: ${gray450};\n      background-color: ${gray450};\n    `}\n\n  ${({ large }) =>\n    large &&\n    css`\n      &:hover {\n        background-color: ${gray50};\n      }\n    `}\n  \n  ${({ fillColor, large }) =>\n    fillColor &&\n    large &&\n    css`\n      &:hover {\n        background-color: ${gray450};\n        opacity: 0.8;\n      }\n    `}\n`;\n\nexport const YellowButton = styled(Container)`\n  border-color: ${yellow100};\n  color: ${yellow100};\n\n  ${({ fillColor }) =>\n    fillColor &&\n    css`\n      color: ${white};\n      border-color: ${yellow100};\n      background-color: ${yellow100};\n    `}\n\n  ${({ large }) =>\n    large &&\n    css`\n      &:hover {\n        opacity: 0.8;\n      }\n    `}\n`;\n\nexport const LightYellowButton = styled(Container)`\n  border-color: ${gold100};\n  color: ${gold100};\n\n  ${({ fillColor }) =>\n    fillColor &&\n    css`\n      color: ${white};\n      border-color: ${gold100};\n      background-color: ${gold100};\n    `}\n`;\n\nexport const GrayButton = styled(Container)`\n  border-color: ${gray200};\n  color: ${gray200};\n  background-color: ${gray200};\n\n  ${({ fillColor }) =>\n    fillColor &&\n    css`\n      color: ${white};\n      border-color: ${gray200};\n      background-color: ${gray200};\n    `}\n\n  ${({ fillColor, large }) =>\n    fillColor &&\n    large &&\n    css`\n      &:hover {\n        opacity: 0.8;\n      }\n    `}\n`;\n\nexport const BlueButton = styled(Container)`\n  border-color: ${blue100};\n  color: ${blue100};\n\n  ${({ fillColor }) =>\n    fillColor &&\n    css`\n      color: ${white};\n      border-color: ${blue100};\n      background-color: ${blue100};\n    `}\n`;\n\nexport const RedButton = styled(Container)`\n  border-color: ${red100};\n\n  ${({ fillColor }) =>\n    fillColor &&\n    css`\n      color: ${white};\n      border-color: ${red100};\n      background-color: ${red100};\n    `}\n\n  ${({ fillColor, large }) =>\n    fillColor &&\n    large &&\n    css`\n      &:hover {\n        opacity: 0.8;\n      }\n    `}\n`;\n\nexport const LiteButton = styled(Container)`\n  border-color: ${yellow100};\n  color: ${gray400};\n  background-color: ${white};\n\n  ${({ fillColor }) =>\n    fillColor &&\n    css`\n      color: ${white};\n      border-color: ${yellow100};\n      background-color: ${yellow100};\n    `}\n`;\n\nexport const PlusButton = styled(Container)`\n  border-color: ${red100};\n  color: ${gray400};\n  background-color: ${white};\n\n  ${({ fillColor }) =>\n    fillColor &&\n    css`\n      color: ${white};\n      border-color: ${red100};\n      background-color: ${red100};\n    `}\n`;\n","import React from 'react';\n\nimport { Spinner } from '../../Spinner';\n\nimport {\n  Inner,\n  Container,\n  BlackButton,\n  YellowButton,\n  LightYellowButton,\n  GrayButton,\n  BlueButton,\n  RedButton,\n  LiteButton,\n  PlusButton,\n} from './Button.styles';\n\nexport const BaseButton = ({\n  className = '',\n  disabled = false,\n  onClick = () => {},\n  rounded = true,\n  color = 'yellow',\n  fill = false,\n  borderless = false,\n  size,\n  width,\n  isLoading,\n  children,\n  testId,\n}) => {\n  const _onClick = (e) => {\n    if (disabled) return;\n    if (isLoading) return;\n    onClick(e);\n  };\n\n  const getButton = (color) => {\n    switch (color) {\n      case 'black':\n        return BlackButton;\n      case 'yellow':\n        return YellowButton;\n      case 'light-yellow':\n        return LightYellowButton;\n      case 'gray':\n        return GrayButton;\n      case 'blue':\n        return BlueButton;\n      case 'red':\n        return RedButton;\n      case 'lite':\n        return LiteButton;\n      case 'plus':\n        return PlusButton;\n      default:\n        return Container;\n    }\n  };\n\n  const ColorButton = getButton(color);\n\n  return (\n    <ColorButton\n      className={className}\n      size={size}\n      width={width}\n      rounded={rounded}\n      fillColor={fill}\n      borderless={borderless}\n      disabled={disabled}\n      onClick={_onClick}\n      data-testid={testId}\n    >\n      <Inner>\n        {!isLoading && children}\n        {isLoading && <Spinner width={18} height={18} borderWeight={3} />}\n      </Inner>\n    </ColorButton>\n  );\n};\n"],"sourceRoot":""}