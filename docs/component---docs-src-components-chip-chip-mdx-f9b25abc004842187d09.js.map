{"version":3,"sources":["webpack:///../docsSrc/components/Container/Container.js","webpack:///../src/components/Chip/Chip.styles.js","webpack:///../src/components/Chip/index.js","webpack:///../docsSrc/components/Chip/Chip.js","webpack:///../docsSrc/components/Chip/Chip.mdx"],"names":["Container","children","rest","direction","styled","textSmall","color","brown100","css","Chip","isOverflowed","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","__position","__code","__scope","Playground","Props","isMDXComponent"],"mappings":"wNAIO,IAAMA,EAAY,SAAC,GAAD,IAAGC,EAAH,WAAgBC,E,oIAAhB,wBACvB,kBADuB,S,qbAQzBF,eAAyB,CACvBG,UAAW,Q,mkBCRN,IAAMH,EAAYI,IAAH,QAClBC,YAAU,CAAEC,MAAOC,MADD,KAIlB,mCAEAC,YADY,IADZ,a,ubCLSC,EAAO,SAAC,GAAwC,IAAtCR,EAAqC,EAArCA,SAAqC,IAA3BS,oBAA2B,SAC1D,OAAO,eAAWA,aAAcA,GAAhC,S,spBCDK,IAAMD,EAAO,SAAC,GAAD,IAAGR,EAAH,WAAgBC,E,oIAAhB,wBAClB,kBADkB,S,uZAQpBO,eAAoB,CAClBC,cAAc,G,+NCJT,IAAMC,EAAe,Q,kNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,QADR,QAGA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIV,EAAMS,QAAQ,UACzB,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,4UAA6UC,SAAO,GACrXL,QACAH,kBACAS,eACAC,UACAf,OACAT,eANqX,gBAOrXc,IAPqX,EAQrXH,eARqX,GASpXO,QAAQ,cACb,YAAClB,EAAA,EAAD,CAAWkB,QAAQ,aACjB,YAAC,EAAD,CAAMA,QAAQ,QAAd,iBACA,YAAC,EAAD,CAAMA,QAAQ,QAAd,iBACA,YAAC,EAAD,CAAMA,QAAQ,QAAd,iBACA,YAAC,EAAD,CAAMA,QAAQ,QAAd,iBACA,YAAC,EAAD,CAAMR,cAAY,EAACQ,QAAQ,QAA3B,uJ,gNAUJH,EAAWU,gBAAiB","file":"component---docs-src-components-chip-chip-mdx-f9b25abc004842187d09.js","sourcesContent":["import React from 'react';\nimport t from 'prop-types';\nimport { Container as Component } from 'remember-ui';\n\nexport const Container = ({ children, ...rest }) => (\n  <Component {...rest}>{children}</Component>\n);\n\nContainer.propTypes = {\n  direction: t.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n};\n\nContainer.defaultProps = {\n  direction: 'row',\n};\n","import styled, { css } from 'styled-components';\n\nimport { yellow50, brown100 } from '../../core/GlobalStyle/variable';\nimport { textSmall, textEllipsis } from '../../core/GlobalStyle/mixin';\n\nexport const Container = styled.div`\n  ${textSmall({ color: brown100 })};\n  background-color: ${yellow50};\n\n  ${({ isOverflowed }) =>\n    isOverflowed &&\n    css`\n      ${textEllipsis};\n      min-width: 14px;\n      margin: 0px !important;\n    `}\n\n  margin-right: 4px;\n  padding: 1px 6px;\n  height: 24px;\n  border-radius: 2px;\n  box-sizing: border-box;\n  display: inline-block;\n  white-space: nowrap;\n`;\n","import React from 'react';\n\nimport { Container } from './Chip.styles';\n\nexport const Chip = ({ children, isOverflowed = false }) => {\n  return <Container isOverflowed={isOverflowed}>{children}</Container>;\n};\n","import React from 'react';\nimport t from 'prop-types';\nimport { Chip as Component } from 'remember-ui';\n\nexport const Chip = ({ children, ...rest }) => (\n  <Component {...rest}>{children}</Component>\n);\n\nChip.propTypes = {\n  isOverflowed: t.oneOf([false, true]),\n};\n\nChip.defaultProps = {\n  isOverflowed: false,\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jisukyoon/remember-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Chip } from './Chip';\nimport { Container } from '../Container/Container';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"chip\"\n    }}>{`Chip`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Chip} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'<Container>\\n  <Chip>Some message1</Chip>\\n  <Chip>Some message2</Chip>\\n  <Chip>Some message3</Chip>\\n  <Chip>Some message4</Chip>\\n  <Chip isOverflowed>\\n    Blah blah~\\n    BlahblahBlahblahBlahblahBlahblahBlahblahBlahblahBlahblahBlahblahBlahblahBlahblahBlahblahBlahblahBlahblahBlahblahBlahblahBlahblah\\n  </Chip>\\n</Container>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Chip,\n      Container,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Container mdxType=\"Container\">\n    <Chip mdxType=\"Chip\">Some message1</Chip>\n    <Chip mdxType=\"Chip\">Some message2</Chip>\n    <Chip mdxType=\"Chip\">Some message3</Chip>\n    <Chip mdxType=\"Chip\">Some message4</Chip>\n    <Chip isOverflowed mdxType=\"Chip\">\n      Blah blah~\n      BlahblahBlahblahBlahblahBlahblahBlahblahBlahblahBlahblahBlahblahBlahblahBlahblahBlahblahBlahblahBlahblahBlahblahBlahblahBlahblah\n    </Chip>\n  </Container>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}