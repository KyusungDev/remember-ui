{"version":3,"sources":["webpack:///../docsSrc/components/Container/Container.js","webpack:///../src/components/Control/Checkbox/Checkbox.styles.js","webpack:///../src/components/Control/Checkbox/index.js","webpack:///../docsSrc/components/Control/Checkbox/Checkbox.mdx","webpack:///../docsSrc/components/Control/Checkbox/Checkbox.js"],"names":["Container","children","rest","direction","styled","Icon","getIconImg","state","disabled","Checkbox","onClick","src","alt","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","__position","__code","__scope","Playground","Props","React","isChecked","setIsChecked","toggle","isMDXComponent"],"mappings":"wNAIO,IAAMA,EAAY,SAAC,GAAD,IAAGC,EAAH,WAAgBC,E,oIAAhB,wBACvB,kBADuB,S,qbAQzBF,eAAyB,CACvBG,UAAW,Q,ufCXN,IAAMH,EAAYI,IAAH,SAMV,8BAA2B,UAA3B,kB,ucAGL,IAAMC,EAAOD,IAAH,c,6cCDXE,EAAa,SAACC,EAAM,GACxB,YAD8C,IAArBC,OAAW,GACpC,EAAqB,EAAP,EACd,OAAID,EAAuB,EAAP,EACb,EAAP,GAGWE,EAAW,SAAC,GAAD,cAAGF,OAAH,0BAAkBG,OAAlB,MAA4B,aAA5B,EAAsCF,EAAtC,kBACtB,eAAWA,SAAX,EAA+BE,QAAS,mBAAQF,GAAYE,EAApB,KACtC,eAAMC,IAAKL,EAAWC,EAAtB,GAAwCK,IAAI,wB,i5BCTzC,IAAMC,EAAe,Q,kOAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,YADR,YAGA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIZ,IAAUW,QAAQ,UAC7B,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,qyBAAozBC,SAAO,GAC51BL,QACAH,kBACAS,eACAC,UACAjB,aACAT,eAN41B,gBAO51BgB,IAP41B,EAQ51BH,eAR41B,GAS31BO,QAAQ,eACZ,WAAM,MACiCO,YAAe,GAA1CC,EADN,KACiBC,EADjB,KAGKC,EAAS,kBAAMD,GAAcD,IAEnC,OAAO,4BACP,YAAC,IAAD,CAAWzB,UAAU,SAASiB,QAAQ,aACpC,+CACA,YAAC,IAAD,CAAWjB,UAAU,MAAMiB,QAAQ,aACjC,YAAC,IAAD,CAAUb,MAAM,KAAKa,QAAQ,aAC7B,YAAC,IAAD,CAAUb,MAAM,MAAMa,QAAQ,aAC9B,YAAC,IAAD,CAAUb,MAAM,KAAKC,UAAQ,EAACY,QAAQ,eAI1C,YAAC,IAAD,CAAWjB,UAAU,SAASiB,QAAQ,aACpC,kDACA,YAAC,IAAD,CAAWjB,UAAU,MAAMiB,QAAQ,aACjC,YAAC,IAAD,CAAUb,MAAOqB,EAAY,KAAO,MAAOlB,QAASoB,EAAQV,QAAQ,aACpE,YAAC,IAAD,CAAUb,MAAOqB,EAAY,KAAO,MAAOlB,QAASoB,EAAQtB,UAAQ,EAACY,QAAQ,yB,gOAUzFH,EAAWc,gBAAiB,G,8HCzEftB,EAAW,SAAC,GAAD,IAAMP,EAAN,2BAAiB,gBAAjB,S,+bAQxBO,eAAwB,CACtBF,MADsB,MAEtBC,UAFsB,EAGtBE,QAAS","file":"component---docs-src-components-control-checkbox-checkbox-mdx-0cedbffb70ee73f446b1.js","sourcesContent":["import React from 'react';\nimport t from 'prop-types';\nimport { Container as Component } from 'remember-ui';\n\nexport const Container = ({ children, ...rest }) => (\n  <Component {...rest}>{children}</Component>\n);\n\nContainer.propTypes = {\n  direction: t.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n};\n\nContainer.defaultProps = {\n  direction: 'row',\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  user-select: none; /* Non-prefixed version, currently supported by Chrome and Opera */\n  height: 24px;\n  width: 24px;\n  align-items: center;\n\n  cursor: ${({ disabled }) => (disabled ? 'default' : 'pointer')};\n`;\n\nexport const Icon = styled.img`\n  width: 16px;\n  height: 16px;\n  margin: 4px;\n`;\n","import React from 'react';\n\nimport {\n  checkboxChecked,\n  checkboxOutline,\n  checkboxDisabled,\n} from '../../../assets';\n\nimport { Container, Icon } from './Checkbox.styles';\n\nconst getIconImg = (state, disabled = false) => {\n  if (disabled) return checkboxDisabled;\n  if (state === 'on') return checkboxChecked;\n  return checkboxOutline;\n};\n\nexport const Checkbox = ({ state = 'off', onClick = () => {}, disabled }) => (\n  <Container disabled={disabled} onClick={(e) => !disabled && onClick(e)}>\n    <Icon src={getIconImg(state, disabled)} alt=\"checkbox-img\" />\n  </Container>\n);\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jisukyoon/remember-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Checkbox } from './Checkbox';\nimport { Container } from '../../Container/Container';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"checkbox\"\n    }}>{`Checkbox`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Checkbox} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const [isChecked, setIsChecked] = React.useState(true)\\n  const toggle = () => setIsChecked(!isChecked)\\n  return (\\n    <>\\n      <Container direction=\\\"column\\\">\\n        <div>체크박스 on/off/disabled</div>\\n        <Container direction=\\\"row\\\">\\n          <Checkbox state=\\\"on\\\" />\\n          <Checkbox state=\\\"off\\\" />\\n          <Checkbox state=\\\"on\\\" disabled />\\n        </Container>\\n      </Container>\\n\\n      <Container direction=\\\"column\\\">\\n        <div>체크박스 onClick Event Bind</div>\\n        <Container direction=\\\"row\\\">\\n          <Checkbox state={isChecked ? \\'on\\' : \\'off\\'} onClick={toggle} />\\n          <Checkbox\\n            state={isChecked ? \\'on\\' : \\'off\\'}\\n            onClick={toggle}\\n            disabled\\n          />\\n        </Container>\\n      </Container>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Checkbox,\n      Container,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [isChecked, setIsChecked] = React.useState(true);\n\n        const toggle = () => setIsChecked(!isChecked);\n\n        return <>\n        <Container direction=\"column\" mdxType=\"Container\">\n          <div>체크박스 on/off/disabled</div>\n          <Container direction=\"row\" mdxType=\"Container\">\n            <Checkbox state=\"on\" mdxType=\"Checkbox\" />\n            <Checkbox state=\"off\" mdxType=\"Checkbox\" />\n            <Checkbox state=\"on\" disabled mdxType=\"Checkbox\" />\n          </Container>\n        </Container>\n        \n        <Container direction=\"column\" mdxType=\"Container\">\n          <div>체크박스 onClick Event Bind</div>\n          <Container direction=\"row\" mdxType=\"Container\">\n            <Checkbox state={isChecked ? 'on' : 'off'} onClick={toggle} mdxType=\"Checkbox\" />\n            <Checkbox state={isChecked ? 'on' : 'off'} onClick={toggle} disabled mdxType=\"Checkbox\" />\n          </Container>\n        </Container>\n      </>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\nimport t from 'prop-types';\nimport { Checkbox as Component } from 'remember-ui';\n\nexport const Checkbox = ({ ...rest }) => <Component {...rest} />;\n\nCheckbox.propTypes = {\n  state: t.oneOf(['on', 'off']),\n  disabled: t.oneOf([false, true]),\n  onClick: t.func,\n};\n\nCheckbox.defaultProps = {\n  state: 'off',\n  disabled: false,\n  onClick: () => {},\n};\n"],"sourceRoot":""}