{"version":3,"sources":["webpack:///../docs/src/components/Control/Radio/Radio.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","Radio","__position","__code","__scope","Playground","Props","Container","React","radioId","setRadioId","setRadio","id","direction","isChecked","style","display","alignItems","onClick","isMDXComponent"],"mappings":"2hBASO,IAAMA,EAAe,Q,6NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,SADR,SAGA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,IAAOF,QAAQ,UAC1B,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,iuBAAwuBC,SAAO,GAChxBN,QACAH,kBACAU,eACAC,UACAL,UACAM,eANgxB,gBAOhxBZ,IAPgxB,EAQhxBH,eARgxB,GAS/wBO,QAAQ,eACZ,WAAM,MAC6BS,WAAe,GAAtCC,EADN,KACeC,EADf,KAGKC,EAAW,SAAAC,GAAE,OAAIF,EAAWE,IAElC,OAAO,4BACP,YAAC,IAAD,CAAWC,UAAU,SAASd,QAAQ,aACpC,uCACA,YAAC,IAAD,CAAWc,UAAU,MAAMd,QAAQ,aACjC,YAAC,IAAD,CAAOe,WAAS,EAACf,QAAQ,UACzB,YAAC,IAAD,CAAOA,QAAQ,YAInB,YAAC,IAAD,CAAWc,UAAU,SAASd,QAAQ,aACpC,mDACA,mBAAKgB,MAAO,CACRC,QAAS,OACTC,WAAY,WAEd,YAAC,IAAD,CAAOH,UAAuB,IAAZL,EAAeS,QAAS,kBAAMP,EAAS,IAAIZ,QAAQ,UAAU,+BAC/E,YAAC,IAAD,CAAOe,UAAuB,IAAZL,EAAeS,QAAS,kBAAMP,EAAS,IAAIZ,QAAQ,UAAU,2C,2NAU3FH,EAAWuB,gBAAiB","file":"component---docs-src-components-control-radio-radio-mdx-7adc99c0995eb7a34236.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jisukyoon/remember-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Radio } from './Radio';\nimport { Container } from '../../Container/Container';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"radio\"\n    }}>{`Radio`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Radio} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const [radioId, setRadioId] = React.useState(1)\\n  const setRadio = id => setRadioId(id)\\n  return (\\n    <>\\n      <Container direction=\\\"column\\\">\\n        <div>Radio on/off</div>\\n        <Container direction=\\\"row\\\">\\n          <Radio isChecked />\\n          <Radio />\\n        </Container>\\n      </Container>\\n\\n      <Container direction=\\\"column\\\">\\n        <div>Radio onClick Event Bind</div>\\n        <div style={{ display: \\'flex\\', alignItems: \\'center\\' }}>\\n          <Radio isChecked={radioId === 1} onClick={() => setRadio(1)} />\\n          <span>옵션1</span>\\n          <Radio isChecked={radioId === 2} onClick={() => setRadio(2)} />\\n          <span>옵션2</span>\\n        </div>\\n      </Container>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Radio,\n      Container,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [radioId, setRadioId] = React.useState(1);\n\n        const setRadio = id => setRadioId(id);\n\n        return <>\n        <Container direction=\"column\" mdxType=\"Container\">\n          <div>Radio on/off</div>\n          <Container direction=\"row\" mdxType=\"Container\">\n            <Radio isChecked mdxType=\"Radio\" />\n            <Radio mdxType=\"Radio\" />\n          </Container>\n        </Container>\n        \n        <Container direction=\"column\" mdxType=\"Container\">\n          <div>Radio onClick Event Bind</div>\n          <div style={{\n              display: 'flex',\n              alignItems: 'center'\n            }}>\n            <Radio isChecked={radioId === 1} onClick={() => setRadio(1)} mdxType=\"Radio\" /><span>옵션1</span> \n            <Radio isChecked={radioId === 2} onClick={() => setRadio(2)} mdxType=\"Radio\" /><span>옵션2</span>\n          </div>\n        </Container>\n      </>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}