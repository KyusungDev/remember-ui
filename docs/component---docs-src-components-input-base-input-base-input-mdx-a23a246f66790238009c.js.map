{"version":3,"sources":["webpack:///../docsSrc/components/Input/BaseInput/BaseInput.js","webpack:///../docsSrc/components/Input/BaseInput/BaseInput.mdx","webpack:///../src/constant/index.js","webpack:///../src/utils/string.js","webpack:///../docsSrc/components/Container/Container.js","webpack:///../src/components/Control/Checkbox/Checkbox.styles.js","webpack:///../src/components/Control/Checkbox/index.js","webpack:///../src/components/Input/BaseInput/BaseInput.styles.js","webpack:///../src/components/Input/BaseInput/index.js","webpack:///../docsSrc/components/Control/Checkbox/Checkbox.js"],"names":["BaseInput","rest","type","className","autoFocus","required","disabled","useError","errorMark","onlyNumber","blankLabel","readOnly","onChange","onClick","onEnter","validate","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","__position","__code","__scope","Playground","Props","Container","Checkbox","React","buyerName","setBuyerName","phoneNo","setPhoneNo","name","label","placeholder","maxLength","marginBottom","value","e","target","phone","footer","style","display","alignItems","state","isMDXComponent","prefixConcat","item","PRODUCT_PREFIX","handleInputLength","handleChange","event","children","direction","styled","Icon","getIconImg","src","alt","Label","textSmall","color","gray200","Mark","ErrorMessage","font","size","weight","Input","gray400","placeholderColor","css","outerRef","useState","error","setError","ref","disable","test","onBlur","onKeyPress","key"],"mappings":"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","file":"component---docs-src-components-input-base-input-base-input-mdx-a23a246f66790238009c.js","sourcesContent":["import React from 'react';\nimport t from 'prop-types';\nimport { BaseInput as Component } from 'remember-ui';\n\nexport const BaseInput = ({ ...rest }) => {\n  return <Component {...rest} />;\n};\n\nBaseInput.propTypes = {\n  type: t.string.isRequired,\n  name: t.string.isRequired,\n  value: t.string,\n  placeholder: t.string,\n  label: t.string,\n  maxLength: t.number,\n  marginBottom: t.number,\n  outerRef: t.string,\n  footer: t.object,\n  className: t.string,\n\n  autoFocus: t.oneOf([false, true]),\n  required: t.oneOf([false, true]),\n  disabled: t.oneOf([false, true]),\n  useError: t.oneOf([false, true]),\n  errorMark: t.oneOf([false, true]),\n  onlyNumber: t.oneOf([false, true]),\n  blankLabel: t.oneOf([false, true]),\n  readOnly: t.oneOf([false, true]),\n\n  onChange: t.func,\n  onClick: t.func,\n  onEnter: t.func,\n  validate: t.func,\n};\n\nBaseInput.defaultProps = {\n  type: 'text',\n  className: '',\n  autoFocus: false,\n  required: false,\n  disabled: false,\n  useError: false,\n  errorMark: false,\n  onlyNumber: false,\n  blankLabel: false,\n  readOnly: false,\n  onChange: () => {},\n  onClick: () => {},\n  onEnter: () => {},\n  validate: () => {},\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jisukyoon/remember-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { BaseInput } from './BaseInput';\nimport { Container } from '../../Container/Container';\nimport { Checkbox } from '../../Control/Checkbox/Checkbox';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"baseinput\"\n    }}>{`BaseInput`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={BaseInput} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const [buyerName, setBuyerName] = React.useState(\\'\\')\\n  const [phoneNo, setPhoneNo] = React.useState()\\n  return (\\n    <>\\n      <Container>\\n        <BaseInput type=\\\"text\\\" name=\\\"test1\\\" />\\n        <BaseInput name=\\\"test2\\\" readOnly />\\n        <BaseInput name=\\\"test2\\\" disabled />\\n      </Container>\\n      <br />\\n      <Container>\\n        <BaseInput\\n          name=\\\"test2\\\"\\n          label=\\\"제목\\\"\\n          placeholder=\\\"제목을 입력하세요 (최대 50자)\\\"\\n          maxLength={50}\\n          marginBottom={10}\\n        />\\n        <BaseInput\\n          name=\\\"buyerName\\\"\\n          label=\\\"구매자\\\"\\n          placeholder=\\\"구매자명을 입력하세요\\\"\\n          value={buyerName}\\n          onChange={e => setBuyerName(e.target.value)}\\n          maxLength={150}\\n          marginBottom={10}\\n          autoFocus\\n          required\\n          useError\\n          validate={name => {\\n            if (!name) return \\'구매자명을 입력하세요\\'\\n          }}\\n        />\\n        <BaseInput\\n          name=\\\"phoneNo\\\"\\n          label=\\\"핸드폰\\\"\\n          placeholder=\\\"핸드폰 번호를 입력하세요\\\"\\n          value={phoneNo}\\n          onChange={e => setPhoneNo(e.target.value)}\\n          maxLength={150}\\n          marginBottom={10}\\n          required\\n          useError\\n          onlyNumber\\n          validate={phone => {\\n            if (!phone) return \\'핸드폰 번호를 입력하세요\\'\\n          }}\\n        />\\n        <BaseInput\\n          name=\\\"email\\\"\\n          label=\\\"이메일\\\"\\n          placeholder=\\\"이메일\\\"\\n          footer={\\n            <div style={{ display: \\'flex\\', alignItems: \\'center\\' }}>\\n              <Checkbox state=\\\"on\\\" />\\n              <span className=\\\"notify-text\\\">알림메일을 수신합니다</span>\\n            </div>\\n          }\\n        />\\n      </Container>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      BaseInput,\n      Container,\n      Checkbox,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [buyerName, setBuyerName] = React.useState('');\n        const [phoneNo, setPhoneNo] = React.useState();\n        return <>\n        <Container mdxType=\"Container\">\n          <BaseInput type=\"text\" name=\"test1\" mdxType=\"BaseInput\" />\n          <BaseInput name=\"test2\" readOnly mdxType=\"BaseInput\" />\n          <BaseInput name=\"test2\" disabled mdxType=\"BaseInput\" />\n        </Container>\n        <br />\n        <Container mdxType=\"Container\">\n          <BaseInput name=\"test2\" label=\"제목\" placeholder=\"제목을 입력하세요 (최대 50자)\" maxLength={50} marginBottom={10} mdxType=\"BaseInput\" />\n          <BaseInput name=\"buyerName\" label=\"구매자\" placeholder=\"구매자명을 입력하세요\" value={buyerName} onChange={e => setBuyerName(e.target.value)} maxLength={150} marginBottom={10} autoFocus required useError validate={name => {\n              if (!name) return '구매자명을 입력하세요';\n            }} mdxType=\"BaseInput\" />\n          <BaseInput name=\"phoneNo\" label=\"핸드폰\" placeholder=\"핸드폰 번호를 입력하세요\" value={phoneNo} onChange={e => setPhoneNo(e.target.value)} maxLength={150} marginBottom={10} required useError onlyNumber validate={phone => {\n              if (!phone) return '핸드폰 번호를 입력하세요';\n            }} mdxType=\"BaseInput\" />\n          <BaseInput name=\"email\" label=\"이메일\" placeholder=\"이메일\" footer={<div style={{\n              display: 'flex',\n              alignItems: 'center'\n            }}>\n                <Checkbox state=\"on\" mdxType=\"Checkbox\" />\n                <span className=\"notify-text\">\n                  알림메일을 수신합니다\n                </span>\n              </div>} mdxType=\"BaseInput\" />\n        </Container>\n      </>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export const PRODUCT_PREFIX = 'remember-ui';\n","import { PRODUCT_PREFIX } from '../constant';\n\nexport const prefixConcat = (item) => {\n  return `${PRODUCT_PREFIX}-${item}`;\n};\n\nexport const handleInputLength = (handleChange, event, maxLength) => {\n  if (event.target.value.length > maxLength) return;\n  handleChange(event);\n};\n","import React from 'react';\nimport t from 'prop-types';\nimport { Container as Component } from 'remember-ui';\n\nexport const Container = ({ children, ...rest }) => (\n  <Component {...rest}>{children}</Component>\n);\n\nContainer.propTypes = {\n  direction: t.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n};\n\nContainer.defaultProps = {\n  direction: 'row',\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  user-select: none; /* Non-prefixed version, currently supported by Chrome and Opera */\n  height: 24px;\n  width: 24px;\n  align-items: center;\n\n  cursor: ${({ disabled }) => (disabled ? 'default' : 'pointer')};\n`;\n\nexport const Icon = styled.img`\n  width: 16px;\n  height: 16px;\n  margin: 4px;\n`;\n","import React from 'react';\n\nimport {\n  checkboxChecked,\n  checkboxOutline,\n  checkboxDisabled,\n} from '../../../assets';\n\nimport { Container, Icon } from './Checkbox.styles';\n\nconst getIconImg = (state, disabled = false) => {\n  if (disabled) return checkboxDisabled;\n  if (state === 'on') return checkboxChecked;\n  return checkboxOutline;\n};\n\nexport const Checkbox = ({ state = 'off', onClick = () => {}, disabled }) => (\n  <Container disabled={disabled} onClick={(e) => !disabled && onClick(e)}>\n    <Icon src={getIconImg(state, disabled)} alt=\"checkbox-img\" />\n  </Container>\n);\n","import styled, { css } from 'styled-components';\n\nimport {\n  font,\n  textSmall,\n  placeholderColor,\n  gray50,\n  gray100,\n  gray150,\n  gray200,\n  gray400,\n  red100,\n} from '../../../core/GlobalStyle';\n\nexport const Container = styled.div``;\n\nexport const Label = styled.div`\n  ${textSmall({ color: gray200 })};\n\n  display: flex;\n  align-items: center;\n  margin-bottom: ${({ marginBottom }) =>\n    marginBottom ? `${marginBottom}px` : '8px'};\n  min-height: 20px;\n`;\n\nexport const Mark = styled.img`\n  margin-left: 4px;\n  position: relative;\n  top: 1px;\n  width: 6px;\n  height: 6px;\n`;\n\nexport const ErrorMessage = styled.div`\n  ${font({ size: '13px', color: red100, weight: 'normal' })}\n\n  height: 19px;\n`;\n\nexport const Input = styled.input`\n  ${font({ size: '15px', color: gray400 })}\n  ${placeholderColor(gray150)}\n  \n  height: 44px;\n  width: 100%;\n  border-radius: 4px;\n  border: 1px solid ${gray100};\n  padding: 11px 12px;\n  box-sizing: border-box;\n  outline: none;\n\n  &:focus {\n    border: 1px solid ${gray150};\n  }\n\n  ${({ error }) =>\n    error &&\n    css`\n      border: 1px solid ${red100};\n    `}\n\n  ${({ footer }) =>\n    footer &&\n    css`\n      margin-bottom: 10px;\n    `}\n\n  ${({ disable }) =>\n    disable &&\n    css`\n      background-color: ${gray50};\n      color: ${gray150};\n      cursor: default;\n\n      &:focus {\n        border: 1px solid ${gray100};\n      }\n    `}\n`;\n","import React, { useState } from 'react';\n\nimport { handleInputLength } from '../../../utils/string';\n\nimport { requiredIcon } from '../../../assets';\nimport {\n  Container,\n  Label,\n  Mark,\n  ErrorMessage,\n  Input,\n} from './BaseInput.styles';\n\nexport const BaseInput = ({\n  value,\n  name,\n  onChange,\n  onClick,\n  placeholder,\n  label,\n  autoFocus,\n  required,\n  disabled,\n  className,\n  onEnter,\n  // error만 있어도 되지만 다른 DcNewInput을 사용한 곳에 margin 대응을 위해 넣음\n  useError,\n  errorMark,\n  footer,\n  validate,\n  maxLength,\n  onlyNumber,\n  type = 'text',\n  blankLabel = false,\n  readOnly = false,\n  marginBottom,\n  outerRef,\n}) => {\n  const [error, setError] = useState('');\n\n  const _validate = () => {\n    const error = validate(value);\n    setError(error);\n  };\n\n  const _onChange = (e) => {\n    if (onlyNumber && e.target.value !== '' && !/^\\d+$/.test(e.target.value))\n      return;\n    if (maxLength) return handleInputLength(onChange, e, maxLength);\n    onChange(e);\n  };\n\n  return (\n    <Container className={className}>\n      {(label || blankLabel) && (\n        <Label marginBottom={marginBottom}>\n          <span>{label}</span>\n          {required && <Mark src={requiredIcon} alt=\"mark\" />}\n        </Label>\n      )}\n      <Input\n        ref={outerRef}\n        error={!!error || errorMark}\n        footer={!!footer}\n        disable={disabled}\n        value={value}\n        type={type}\n        name={name}\n        onChange={_onChange}\n        onClick={onClick}\n        placeholder={placeholder}\n        autoFocus={autoFocus}\n        readOnly={readOnly || disabled}\n        onBlur={validate && _validate}\n        onKeyPress={({ key }) => {\n          if (key === 'Enter') {\n            onEnter && onEnter();\n          }\n        }}\n      />\n\n      {footer}\n      {useError && <ErrorMessage>{error}</ErrorMessage>}\n    </Container>\n  );\n};\n","import React from 'react';\nimport t from 'prop-types';\nimport { Checkbox as Component } from 'remember-ui';\n\nexport const Checkbox = ({ ...rest }) => <Component {...rest} />;\n\nCheckbox.propTypes = {\n  state: t.oneOf(['on', 'off']),\n  disabled: t.oneOf([false, true]),\n  onClick: t.func,\n};\n\nCheckbox.defaultProps = {\n  state: 'off',\n  disabled: false,\n  onClick: () => {},\n};\n"],"sourceRoot":""}