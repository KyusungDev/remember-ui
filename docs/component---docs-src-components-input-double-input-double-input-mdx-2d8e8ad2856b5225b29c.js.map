{"version":3,"sources":["webpack:///../src/constant/index.js","webpack:///../src/utils/string.js","webpack:///../docsSrc/components/Container/Container.js","webpack:///../docsSrc/components/Input/DoubleInput/DoubleInput.js","webpack:///../docsSrc/components/Input/DoubleInput/DoubleInput.mdx","webpack:///../src/components/Input/DoubleInput/DoubleInput.styles.js","webpack:///../src/components/Input/DoubleInput/index.js","webpack:///../src/components/Input/BaseInput/BaseInput.styles.js","webpack:///../src/components/Input/BaseInput/index.js"],"names":["prefixConcat","item","PRODUCT_PREFIX","handleInputLength","handleChange","event","Container","children","rest","direction","DoubleInput","label2","onlyNumber","onChange1","onChange2","validate","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","__position","__code","__scope","Playground","Props","React","month","setMonth","year","setYear","label1","value1","value2","name1","name2","placeholder1","placeholder2","e","target","value","_expiryDateMonth","_expiryDateYear","length","maxLength","isMDXComponent","styled","width","Inputs","Input","Divider","font","size","color","weight","ErrorMsg","useState","error","setError","inputRef","useRef","useEffect","onBlur","_error","name","onChange","label","placeholder","required","errorMark","marginBottom","outerRef","Label","textSmall","gray200","Mark","ErrorMessage","gray400","placeholderColor","css","BaseInput","onClick","autoFocus","disabled","className","onEnter","useError","footer","type","blankLabel","readOnly","src","alt","ref","disable","test","onKeyPress","key"],"mappings":"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","file":"component---docs-src-components-input-double-input-double-input-mdx-2d8e8ad2856b5225b29c.js","sourcesContent":["export const PRODUCT_PREFIX = 'remember-ui';\n","import { PRODUCT_PREFIX } from '../constant';\n\nexport const prefixConcat = (item) => {\n  return `${PRODUCT_PREFIX}-${item}`;\n};\n\nexport const handleInputLength = (handleChange, event, maxLength) => {\n  if (event.target.value.length > maxLength) return;\n  handleChange(event);\n};\n","import React from 'react';\nimport t from 'prop-types';\nimport { Container as Component } from 'remember-ui';\n\nexport const Container = ({ children, ...rest }) => (\n  <Component {...rest}>{children}</Component>\n);\n\nContainer.propTypes = {\n  direction: t.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n};\n\nContainer.defaultProps = {\n  direction: 'row',\n};\n","import React from 'react';\nimport t from 'prop-types';\nimport { DoubleInput as Component } from 'remember-ui';\n\nexport const DoubleInput = ({ ...rest }) => {\n  return <Component {...rest} />;\n};\n\nDoubleInput.propTypes = {\n  label1: t.string,\n  label2: t.string,\n  value1: t.string.isRequired,\n  value2: t.string.isRequired,\n  name1: t.string.isRequired,\n  name2: t.string.isRequired,\n  placeholder1: t.string,\n  placeholder2: t.string,\n\n  width: t.number,\n  maxLength: t.number,\n  onlyNumber: t.oneOf([false, true]),\n\n  onChange1: t.func,\n  onChange2: t.func,\n  validate: t.func,\n};\n\nDoubleInput.defaultProps = {\n  label2: ' ',\n  onlyNumber: false,\n  onChange1: () => {},\n  onChange2: () => {},\n  validate: () => {},\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jisukyoon/remember-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { DoubleInput } from './DoubleInput';\nimport { Container } from '../../Container/Container';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"doubleinput\"\n    }}>{`DoubleInput`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={DoubleInput} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const [month, setMonth] = React.useState(\\'\\')\\n  const [year, setYear] = React.useState(\\'\\')\\n  return (\\n    <Container>\\n      <DoubleInput\\n        label1=\\\"유효 기간\\\"\\n        value1={month}\\n        value2={year}\\n        name1=\\\"expiryDateMonth\\\"\\n        name2=\\\"expiryDateYear\\\"\\n        placeholder1=\\\"MM\\\"\\n        placeholder2=\\\"YY\\\"\\n        onChange1={e => {\\n          setMonth(e.target.value)\\n        }}\\n        onChange2={e => {\\n          setYear(e.target.value)\\n        }}\\n        validate={(_expiryDateMonth, _expiryDateYear) => {\\n          if (_expiryDateMonth.length === 2 && _expiryDateYear.length === 2) {\\n            return \\'\\'\\n          }\\n          return \\'유효 기간은 2자리 숫자로 입력하세요\\'\\n        }}\\n        maxLength={2}\\n        onlyNumber\\n      />\\n    </Container>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      DoubleInput,\n      Container,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [month, setMonth] = React.useState('');\n        const [year, setYear] = React.useState('');\n        return <Container mdxType=\"Container\">\n        <DoubleInput label1=\"유효 기간\" value1={month} value2={year} name1=\"expiryDateMonth\" name2=\"expiryDateYear\" placeholder1=\"MM\" placeholder2=\"YY\" onChange1={e => {\n            setMonth(e.target.value);\n          }} onChange2={e => {\n            setYear(e.target.value);\n          }} validate={(_expiryDateMonth, _expiryDateYear) => {\n            if (_expiryDateMonth.length === 2 && _expiryDateYear.length === 2) {\n              return '';\n            }\n\n            return '유효 기간은 2자리 숫자로 입력하세요';\n          }} maxLength={2} onlyNumber mdxType=\"DoubleInput\" />\n      </Container>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import styled from 'styled-components';\n\nimport { BaseInput } from '../BaseInput';\n\nimport {\n  red100,\n  text,\n  font,\n  flexCenterY,\n  flexColumnCenterX,\n} from '../../../core/GlobalStyle';\n\nexport const Container = styled.div`\n  ${flexColumnCenterX}\n\n  width: ${({ width }) => (width && `${width}px`) || '100%'};\n`;\n\nexport const Inputs = styled.div`\n  ${flexCenterY}\n\n  width: 100%;\n`;\n\nexport const Input = styled(BaseInput)`\n  width: 129px;\n`;\n\nexport const Divider = styled.span`\n  ${font({ size: '15px', color: text, weight: 'normal' })}\n\n  position: relative;\n  bottom: -12px;\n  margin: 0 7px;\n`;\n\nexport const ErrorMsg = styled.div`\n  ${font({ size: '13px', color: red100, weight: 'normal' })}\n\n  width: 100%;\n`;\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport {\n  Container,\n  Inputs,\n  Input,\n  Divider,\n  ErrorMsg,\n} from './DoubleInput.styles';\n\nexport const DoubleInput = ({\n  label1,\n  label2 = ' ',\n  value1,\n  value2,\n  name1,\n  name2,\n  placeholder1,\n  placeholder2,\n  onChange1,\n  onChange2,\n  validate,\n  maxLength,\n  onlyNumber,\n  width,\n}) => {\n  const [error, setError] = useState('');\n  const inputRef = useRef();\n\n  useEffect(() => {\n    if (value1.length === maxLength) {\n      inputRef.current.focus();\n    }\n  }, [value1, maxLength]);\n\n  const _validate = (_value1, _value2) => {\n    const _error = validate(_value1, _value2);\n    setError(_error);\n  };\n  return (\n    <Container width={width}>\n      <Inputs onBlur={() => _validate(value1, value2)}>\n        <Input\n          name={name1}\n          value={value1}\n          onChange={onChange1}\n          label={label1}\n          placeholder={placeholder1}\n          required\n          errorMark={!!error}\n          maxLength={maxLength}\n          onlyNumber={onlyNumber}\n          marginBottom={6}\n        />\n        <Divider>/</Divider>\n        <Input\n          outerRef={inputRef}\n          name={name2}\n          value={value2}\n          onChange={onChange2}\n          label={label2}\n          placeholder={placeholder2}\n          errorMark={!!error}\n          maxLength={maxLength}\n          onlyNumber={onlyNumber}\n          marginBottom={6}\n        />\n      </Inputs>\n      <ErrorMsg>{error}</ErrorMsg>\n    </Container>\n  );\n};\n","import styled, { css } from 'styled-components';\n\nimport {\n  font,\n  textSmall,\n  placeholderColor,\n  gray50,\n  gray100,\n  gray150,\n  gray200,\n  gray400,\n  red100,\n} from '../../../core/GlobalStyle';\n\nexport const Container = styled.div``;\n\nexport const Label = styled.div`\n  ${textSmall({ color: gray200 })};\n\n  display: flex;\n  align-items: center;\n  margin-bottom: ${({ marginBottom }) =>\n    marginBottom ? `${marginBottom}px` : '8px'};\n  min-height: 20px;\n`;\n\nexport const Mark = styled.img`\n  margin-left: 4px;\n  position: relative;\n  top: 1px;\n  width: 6px;\n  height: 6px;\n`;\n\nexport const ErrorMessage = styled.div`\n  ${font({ size: '13px', color: red100, weight: 'normal' })}\n\n  height: 19px;\n`;\n\nexport const Input = styled.input`\n  ${font({ size: '15px', color: gray400 })}\n  ${placeholderColor(gray150)}\n  \n  height: 44px;\n  width: 100%;\n  border-radius: 4px;\n  border: 1px solid ${gray100};\n  padding: 11px 12px;\n  box-sizing: border-box;\n  outline: none;\n\n  &:focus {\n    border: 1px solid ${gray150};\n  }\n\n  ${({ error }) =>\n    error &&\n    css`\n      border: 1px solid ${red100};\n    `}\n\n  ${({ footer }) =>\n    footer &&\n    css`\n      margin-bottom: 10px;\n    `}\n\n  ${({ disable }) =>\n    disable &&\n    css`\n      background-color: ${gray50};\n      color: ${gray150};\n      cursor: default;\n\n      &:focus {\n        border: 1px solid ${gray100};\n      }\n    `}\n`;\n","import React, { useState } from 'react';\n\nimport { handleInputLength } from '../../../utils/string';\n\nimport { requiredIcon } from '../../../assets';\nimport {\n  Container,\n  Label,\n  Mark,\n  ErrorMessage,\n  Input,\n} from './BaseInput.styles';\n\nexport const BaseInput = ({\n  value,\n  name,\n  onChange,\n  onClick,\n  placeholder,\n  label,\n  autoFocus,\n  required,\n  disabled,\n  className,\n  onEnter,\n  // error만 있어도 되지만 다른 DcNewInput을 사용한 곳에 margin 대응을 위해 넣음\n  useError,\n  errorMark,\n  footer,\n  validate,\n  maxLength,\n  onlyNumber,\n  type = 'text',\n  blankLabel = false,\n  readOnly = false,\n  marginBottom,\n  outerRef,\n}) => {\n  const [error, setError] = useState('');\n\n  const _validate = () => {\n    const error = validate(value);\n    setError(error);\n  };\n\n  const _onChange = (e) => {\n    if (onlyNumber && e.target.value !== '' && !/^\\d+$/.test(e.target.value))\n      return;\n    if (maxLength) return handleInputLength(onChange, e, maxLength);\n    onChange(e);\n  };\n\n  return (\n    <Container className={className}>\n      {(label || blankLabel) && (\n        <Label marginBottom={marginBottom}>\n          <span>{label}</span>\n          {required && <Mark src={requiredIcon} alt=\"mark\" />}\n        </Label>\n      )}\n      <Input\n        ref={outerRef}\n        error={!!error || errorMark}\n        footer={!!footer}\n        disable={disabled}\n        value={value}\n        type={type}\n        name={name}\n        onChange={_onChange}\n        onClick={onClick}\n        placeholder={placeholder}\n        autoFocus={autoFocus}\n        readOnly={readOnly || disabled}\n        onBlur={validate && _validate}\n        onKeyPress={({ key }) => {\n          if (key === 'Enter') {\n            onEnter && onEnter();\n          }\n        }}\n      />\n\n      {footer}\n      {useError && <ErrorMessage>{error}</ErrorMessage>}\n    </Container>\n  );\n};\n"],"sourceRoot":""}